{
	"arraySearch": "Array Search",
	"averageCollision": "Average Collision",
	"basicStatistics": "Basic Statistics",
	"chooseFile": "Choose a Text File",
	"collisionHandler": "Collision Handler",
	"collisionHandlerInput": "Collision Handler Input",
	"collisionHandlerHelp": "When hash indexes collide this function is called to get the next index.",
	"collisionsHistogram": "Collisions Histogram",
	"collisionsTag": "collisions",
	"collisionStats": "Collision Stats",
	"create": "create",
	"createDictArr": "Create Dictionary Array",
	"createDictArrError": "Created array structure is not [string,string][]. Check your text file or seperators.",
	"description": "In this project, dictionary array is converted to a hash table so search time complexity would be O(1) instead of O(n).",
	"dictionaryCreated": "Dictionary Created",
	"file": "File",
	"fileHelp": "A .txt file that has words and their translation with seperators.",
	"hashFunc": "Hash Function",
	"hashFuncInput": "Hash Function Input",
	"hashTableSearch": "Hash Table Search",
	"hashTableSize": "Hash Table Size",
	"hashTableSizeError": "Please give a larger table size.",
	"loadFactor": "Load Factor",
	"maxCollisions": "Max Collisions",
	"minCollisions": "Min Collisions",
	"occurenceTag": "occurence",
	"pairSeperator": "Pair Seperator",
	"pairSeperatorHelp": "Regexp for seperating each word-translation pairs.",
	"pairSeperatorInput": "Pair Seperator Input",
	"returnTypeNumberError": "Return type is not a number.",
	"searchInDictionaries": "Search in Dictionaries",
	"standardDeviation": "Standard Deviation",
	"throwInfiniteLoopError": "Throw Collision Loop Error",
	"throwInfiniteLoopErrorHelp": "Set this option if you don't use iteration parameter in collision handler function.",
	"title": "Hash Table Dictionary",
	"totalCollisions": "Total Collisions",
	"useDefault": "Use Default",
	"useRecommended": "Use Recommended",
	"wordSeperator": "Word Seperator",
	"wordSeperatorHelp": "Regexp for seperating word from its translation.",
	"wordSeperatorInput": "Word Seperator Input",
	"wordsFound": "words found",
	"comparison": "comparison",
	"compare": "compare",
	"randomSearchComparison": "random search comparison",
	"numberOfSearches": "Number of Searches",
	"numberOfIterations": "Number of Iterations",
	"arrayDictionary": "array dictionary",
	"hashDictionary": "hash table dictionary",
	"allSearchTimeInMs": "All search results in miliseconds.",
	"averageSearchTimeInMs": "Average search time in miliseconds. (lesser the better)",
	"searchingInHashTable": "Searching in hash table is",
	"timesFaster": "times faster!",
	"timesSlower": "times slower!"
}